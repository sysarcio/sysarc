swagger: '2.0' # REQUIRED
info: # REQUIRED
  version: 1.0.0 # REQUIRED for info object
  title: Swagger Petstore # REQUIRED for info object
  description: A sample API that uses a petstore as an example to demonstrate features
    in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0 # REQUIRED if including license object
    url: https://www.apache.org/licenses/LICENSE-2.0.html
host: petstore.swagger.io
basePath: "/api"
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths: # REQUIRED - may be empty
  "/pets": # OPTIONAL - may be empty
    get: # OPTIONAL - Operation object
      description: |
        Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
      - name: tags # REQUIRED if including parameters
        in: query # REQUIRED if including parameters
        description: tags to filter by
        required: false # REQUIRED if 'in' is 'path' and must be true / Optional otherwise and may be false
        type: array # REQUIRED if 'in' is anything other than 'body'
        collectionFormat: csv
        items: # REQUIRED if 'type' above is 'array'
          type: string # REQUIRED if including 'items'
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        type: integer
        format: int32
      responses: # REQUIRED if including Operation Object 
        '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
          description: pet response # REQUIRED for Response Object
          schema:
            type: array
            items:
              "$ref": "#/definitions/Pet" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
        default:
          description: unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post: # OPTIONAL - Operation object
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      parameters:
      - name: pet # REQUIRED if including parameters
        in: body # REQUIRED if including parameters
        description: Pet to add to the store
        required: true # REQUIRED if 'in' is 'path' and must be true / Optional otherwise and may be false
        schema:
          "$ref": "#/definitions/NewPet" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
      responses: # REQUIRED if including Operation Object 
        '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
          description: pet response # REQUIRED for Response Object
          schema:
            "$ref": "#/definitions/Pet" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
        default:
          description: unexpected error
          schema:
            "$ref": "#/definitions/Error" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
  "/pets/{id}": # OPTIONAL - may be empty
    get: # OPTIONAL - Operation object
      description: Returns a user based on a single ID, if the user does not have
        access to the pet
      operationId: find pet by id
      parameters:
      - name: id # REQUIRED if including parameters
        in: path # REQUIRED if including parameters
        description: ID of pet to fetch
        required: true # REQUIRED if 'in' is 'path' and must be true / Optional otherwise and may be false
        type: integer
        format: int64
      responses: # REQUIRED if including Operation Object 
        '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
          description: pet response # REQUIRED for Response Object
          schema:
            "$ref": "#/definitions/Pet" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
        default:
          description: unexpected error
          schema:
            "$ref": "#/definitions/Error" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
    delete: # OPTIONAL - Operation object
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
      - name: id # REQUIRED if including parameters
        in: path # REQUIRED if including parameters
        description: ID of pet to delete
        required: true
        type: integer
        format: int64
      responses: # REQUIRED if including Operation Object 
        '204': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
          description: pet deleted # REQUIRED for Response Object
        default:
          description: unexpected error
          schema:
            "$ref": "#/definitions/Error" # REQUIRED if you're including a reference object. Which is this thing I think. its a bit circular
definitions:
  Pet: # OPTIONAL - Responses Definitions Object
    type: object
    allOf:
    - "$ref": "#/definitions/NewPet"
    - required:
      - id
      properties:
        id:
          type: integer
          format: int64
  NewPet: # OPTIONAL - Parameters Definitions Object
    type: object
    required:
    - name
    properties:
      name:
        type: string
      tag:
        type: string
  Error: # OPTIONAL - Responses Definitions Object
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

# ####################################################
# Arguable 'Minimums' - Does not include parameters #
# ####################################################
# swagger: '2.0' # REQUIRED
# info: # REQUIRED
#   version: 1.0.0 # REQUIRED for info object
#   title: Swagger Petstore # REQUIRED for info object
# paths: # REQUIRED - may be empty
#   "/pets": # OPTIONAL - may be empty
#     get: # OPTIONAL - Operation object
#       description: Returns all pets from the system that the user has access to
#       responses: # REQUIRED if including Operation Object 
#         '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
#           description: pet response # REQUIRED for Response Object
#     post: # OPTIONAL - Operation object
#       responses: # REQUIRED if including Operation Object 
#         '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
#           description: pet response # REQUIRED for Response Object
#   "/pets/{id}": # OPTIONAL - may be empty
#     get: # OPTIONAL - Operation object
#       description: Returns a user based on a single ID, if the user does not have
#         access to the pet
#       responses: # REQUIRED if including Operation Object 
#         '200': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
#           description: pet response # REQUIRED for Response Object
#     delete: # OPTIONAL - Operation object
#       description: deletes a single pet based on the ID supplied
#       responses: # REQUIRED if including Operation Object 
#         '204': # REQUIRED/Must include at least 1 if including responses object and have at least the code for a successful operation
#           description: pet deleted # REQUIRED for Response Object